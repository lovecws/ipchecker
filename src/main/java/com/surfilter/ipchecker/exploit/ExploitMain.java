package com.surfilter.ipchecker.exploit;

import com.surfilter.ipchecker.data.EsDataService;
import com.surfilter.ipchecker.util.Pinyin4jUtil;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

public class ExploitMain {
    private static final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");
    private static final SimpleDateFormat longDateFormat = new SimpleDateFormat("yyyyMMddHHmmss");

    public static void exploit(String sourceEsHost, String sourceEsIndexName, String sourceEsIndexType, String sourceEsFieldName, String sourceEsFieldValue, int batchSize, String filePath) {
        if (sourceEsHost == null || sourceEsIndexName == null || sourceEsIndexType == null || sourceEsFieldName == null || sourceEsFieldValue == null) {
            throw new IllegalArgumentException("参数错误");
        }
        if (filePath == null) {
            filePath = System.getProperty("user.dir").replace("\\", "/");
        }
        String hanYuPinyinString = Pinyin4jUtil.toHanYuPinyinString(sourceEsFieldValue);
        filePath = filePath + "/event/" + hanYuPinyinString + "/" + longDateFormat.format(new Date());

        File eventDir = new File(filePath);
        if (!eventDir.exists()) {
            eventDir.mkdirs();
        }

        String sourcePath = filePath + "/source.json";//ip 文件列表
        String modelPath = filePath + "/exploit_model.json";//匹配的事件列表
        String statisticalPath = filePath + "/exploit_statistical.txt";//统计结果
        //从数据源录入的字段数据
        String[] sourceFiedls = new String[]{"ip_str",
                "location.city.zh-CN",
                "product.vendor",
                "product.vendorcn",
                "device.primary_type",
                "device.secondary_type",
                "service",
                "has_exploit",
                "exploit.cvssbasescore",
                "exploit.exact",
                "exploit.uuid"};
        // 从es中获取数据 然后将抽取的ip数据写入到json文件中
        EsDataService esDataService = new EsDataService(sourceEsHost, sourceEsIndexName, sourceEsIndexType, sourceFiedls);
        Map<String, Object> paramMap = new HashMap<String, Object>();
        paramMap.put(sourceEsFieldName, sourceEsFieldValue);
        //paramMap.put("has_exploit", "true");
        esDataService.extractData(paramMap, batchSize, sourcePath);

        String[] recordFields = new String[]{"vulnerability.vulType",
                "vulnerability.threadType",
                "vulnerability.cnnvd",
                "vulnerability.cve",
                "CVSS.riskLevel",
                "product.vendor"};
        ExploitModel exploitModel = new ExploitModel(sourceEsHost, "vulnerability", "base", recordFields);
        exploitModel.model(sourcePath, modelPath);

        //iot 物联统计
        ExploitStatistical iotExploitStatistical = new ExploitStatistical("device.primary_type", "IOT");
        iotExploitStatistical.statistical(modelPath, statisticalPath);
        //ICS 工控统计
        ExploitStatistical exploitStatistical = new ExploitStatistical("device.primary_type", "ICS");
        exploitStatistical.statistical(modelPath, statisticalPath);
    }

    public static void main(String[] args) {
        exploit("http://172.31.134.229:9200", "wscan", "base", "location.region.zh-CN.untouched", "江西", 1000, null);
    }
}
